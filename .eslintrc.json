{
  "root": true,
  "ignorePatterns": ["node_modules", ".next"],
  "plugins": [],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "plugins": ["@typescript-eslint", "unicorn", "promise"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": "latest",
        "project": ["tsconfig.json"]
      },
      "env": {
        "commonjs": true,
        "es2021": true,
        "node": true
      },
      "extends": [
        "prettier",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:unicorn/recommended"
      ],
      "rules": {
        "no-await-in-loop": ["error"],
        "no-constructor-return": ["error"],
        "no-duplicate-imports": [
          "error",
          {
            "includeExports": true
          }
        ],
        "no-self-compare": ["error"],
        "no-unmodified-loop-condition": ["error"],
        "no-unused-private-class-members": ["error"],
        "require-atomic-updates": ["error"],
        "accessor-pairs": ["error"],
        "block-scoped-var": ["error"],
        "camelcase": ["error"],
        "class-methods-use-this": ["off"],
        "consistent-return": [
          "error",
          {
            "treatUndefinedAsUnspecified": true
          }
        ],
        "consistent-this": ["error", "self"],
        "curly": ["error", "all"],
        "default-case": ["error"],
        "default-case-last": ["error"],
        "eqeqeq": ["error", "always"],
        "grouped-accessor-pairs": ["error"],
        "multiline-comment-style": ["off"],
        "no-confusing-arrow": ["off"],
        "no-eq-null": ["error"],
        "no-eval": ["error"],
        "no-extend-native": ["error"],
        "no-extra-bind": ["error"],
        "no-extra-label": ["error"],
        "no-implicit-coercion": ["error"],
        "no-implicit-globals": ["error"],
        "no-iterator": ["error"],
        "no-label-var": ["error"],
        "no-lonely-if": ["error"],
        "no-mixed-operators": ["error"],
        "no-multi-assign": ["error"],
        "no-multi-str": ["error"],
        "no-new-object": ["error"],
        "no-new-wrappers": ["error"],
        "no-param-reassign": ["error"],
        "no-return-assign": ["error"],
        "no-return-await": ["error"],
        "no-sequences": ["error"],
        "no-unneeded-ternary": ["error"],
        "no-useless-computed-key": ["error"],
        "no-useless-concat": ["error"],
        "no-useless-rename": ["error"],
        "no-useless-return": ["error"],
        "no-var": ["error"],
        "no-trailing-spaces": ["error"],
        "one-var-declaration-per-line": ["error"],
        "prefer-const": ["error"],
        "prefer-object-has-own": ["error"],
        "prefer-object-spread": ["error"],
        "prefer-promise-reject-errors": ["error"],
        "prefer-regex-literals": ["error"],
        "prefer-rest-params": ["error"],
        "prefer-spread": ["error"],
        "prefer-template": ["error"],
        "radix": ["error", "as-needed"],
        "require-unicode-regexp": ["error"],
        "spaced-comment": ["error", "always"],
        "unicorn/filename-case": [
          "error",
          {
            "case": "camelCase"
          }
        ],
        "unicorn/no-useless-undefined": ["off"],
        "unicorn/prefer-export-from": [
          "error",
          { "ignoreUsedVariables": true }
        ],
        "unicorn/catch-error-name": [
          "error",
          {
            "ignore": ["error", "err", "exception"]
          }
        ],
        "unicorn/prevent-abbreviations": [
          "off",
          {
            "replacements": {
              "props": false,
              "ref": false
            }
          }
        ],
        "unicorn/no-null": ["off"],
        "unicorn/prefer-node-protocol": ["off"],
        "unicorn/no-nested-ternary": ["off"],
        "unicorn/no-negated-condition": ["off"],
        "unicorn/no-typeof-undefined": ["off"],
        "unicorn/number-literal-case": ["off"],
        "unicorn/numeric-separators-style": ["off"],
        "@typescript-eslint/no-explicit-any": ["error"],
        "@typescript-eslint/array-type": ["error"],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/class-literal-property-style": ["error"],
        "@typescript-eslint/consistent-indexed-object-style": [
          "error",
          "record"
        ],
        "@typescript-eslint/consistent-type-assertions": [
          "error",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "never"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": ["off", "type"],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports"
          }
        ],
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowConciseArrowFunctionExpressionsStartingWithVoid": true
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "no-public"
          }
        ],
        "@typescript-eslint/member-delimiter-style": ["error"],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": ["signature", "field", "constructor", "method"]
          }
        ],
        "@typescript-eslint/method-signature-style": ["error"],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "variableLike",
            "format": ["camelCase", "PascalCase", "UPPER_CASE"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "variable",
            "modifiers": ["exported"],
            "format": ["camelCase", "PascalCase", "UPPER_CASE"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "function",
            "modifiers": ["exported"],
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "variable",
            "modifiers": ["const"],
            "format": ["UPPER_CASE", "camelCase", "PascalCase"]
          },
          {
            "selector": "memberLike",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "enumMember",
            "format": ["PascalCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "property",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "property",
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid",
            "format": null,
            "modifiers": ["requiresQuotes"]
          },
          {
            "selector": "method",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "property",
            "modifiers": ["private"],
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid",
            "filter": {
              "regex": "^(&:.+)$",
              "match": false
            }
          },
          {
            "selector": "property",
            "modifiers": ["protected"],
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid",
            "filter": {
              "regex": "^(&:.+)$",
              "match": false
            }
          },
          {
            "selector": "method",
            "modifiers": ["private"],
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "objectLiteralProperty",
            "format": null,
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid",
            "filter": {
              "regex": "^(&.+)$",
              "match": true
            }
          }
        ],
        "@typescript-eslint/no-base-to-string": ["error"],
        "@typescript-eslint/no-confusing-non-null-assertion": ["error"],
        "@typescript-eslint/no-confusing-void-expression": [
          "error",
          { "ignoreArrowShorthand": true }
        ],
        /* "@typescript-eslint/no-duplicate-enum-values": ["error"], */
        "@typescript-eslint/no-dynamic-delete": ["error"],
        "@typescript-eslint/no-extraneous-class": ["error"],
        "@typescript-eslint/no-invalid-void-type": ["error"],
        "@typescript-eslint/no-meaningless-void-operator": ["error"],
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": ["error"],
        "@typescript-eslint/no-redundant-type-constituents": ["error"],
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": ["error"],
        "@typescript-eslint/no-unnecessary-condition": ["error"],
        "@typescript-eslint/no-unnecessary-qualifier": ["error"],
        "@typescript-eslint/no-unnecessary-type-arguments": ["error"],
        "@typescript-eslint/no-useless-empty-export": ["error"],
        "@typescript-eslint/non-nullable-type-assertion-style": ["off"],
        /* "@typescript-eslint/parameter-properties": ["error"], */
        "@typescript-eslint/prefer-enum-initializers": ["error"],
        "@typescript-eslint/prefer-for-of": ["error"],
        "@typescript-eslint/prefer-includes": ["error"],
        "@typescript-eslint/prefer-literal-enum-member": [
          "error",
          {
            "allowBitwiseExpressions": true
          }
        ],
        "@typescript-eslint/prefer-nullish-coalescing": ["error"],
        "@typescript-eslint/prefer-optional-chain": ["error"],
        "@typescript-eslint/prefer-readonly": ["error"],
        "@typescript-eslint/prefer-reduce-type-parameter": ["error"],
        "@typescript-eslint/prefer-return-this-type": ["error"],
        "@typescript-eslint/prefer-string-starts-ends-with": ["error"],
        "@typescript-eslint/prefer-ts-expect-error": ["error"],
        "@typescript-eslint/promise-function-async": ["error"],
        "@typescript-eslint/require-array-sort-compare": ["error"],
        "@typescript-eslint/strict-boolean-expressions": ["error"],
        "@typescript-eslint/switch-exhaustiveness-check": ["error"],
        "@typescript-eslint/type-annotation-spacing": ["error"],
        "@typescript-eslint/unified-signatures": ["error"],
        "brace-style": "off",
        "@typescript-eslint/brace-style": ["off"],
        "comma-dangle": "off",
        "@typescript-eslint/comma-dangle": ["off", "always-multiline"],
        "comma-spacing": "off",
        "@typescript-eslint/comma-spacing": ["error"],
        "default-param-last": "off",
        "@typescript-eslint/default-param-last": ["error"],
        "dot-notation": "off",
        "@typescript-eslint/dot-notation": ["error"],
        "func-call-spacing": ["off"],
        "@typescript-eslint/func-call-spacing": ["error"],
        "indent": ["off"],
        "@typescript-eslint/indent": ["off"],
        "init-declarations": ["off"],
        "@typescript-eslint/init-declarations": ["error"],
        "keyword-spacing": ["off"],
        "@typescript-eslint/keyword-spacing": ["error"],
        "lines-between-class-members": ["off"],
        "@typescript-eslint/lines-between-class-members": ["error"],
        "no-array-constructor": ["off"],
        "@typescript-eslint/no-array-constructor": ["error"],
        "no-dupe-class-members": ["off"],
        "@typescript-eslint/no-dupe-class-members": ["error"],
        "no-empty-function": ["off"],
        "@typescript-eslint/no-empty-function": ["error"],
        "no-extra-parens": ["off"],
        "@typescript-eslint/no-extra-parens": ["off"],
        "no-extra-semi": ["off"],
        "@typescript-eslint/no-extra-semi": ["error"],
        "no-implied-eval": ["off"],
        "@typescript-eslint/no-implied-eval": ["error"],
        "no-invalid-this": ["off"],
        "@typescript-eslint/no-invalid-this": ["error"],
        "no-loop-func": ["off"],
        "@typescript-eslint/no-loop-func": ["error"],
        "no-loss-of-precision": ["off"],
        "@typescript-eslint/no-loss-of-precision": ["error"],
        "no-magic-numbers": ["off"],
        "@typescript-eslint/no-magic-numbers": ["off"],
        "no-redeclare": ["off"],
        "@typescript-eslint/no-redeclare": ["error"],
        "no-restricted-imports": ["off"],
        "@typescript-eslint/no-restricted-imports": ["error"],
        "no-shadow": ["off"],
        "@typescript-eslint/no-shadow": ["error"],
        "no-throw-literal": ["off"],
        "@typescript-eslint/no-throw-literal": ["error"],
        "no-unused-expressions": ["off"],
        "@typescript-eslint/no-unused-expressions": ["error"],
        "no-unused-vars": ["off"],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_"
          }
        ],
        "no-use-before-define": ["off"],
        "@typescript-eslint/no-use-before-define": ["error"],
        "no-useless-constructor": ["off"],
        "@typescript-eslint/no-useless-constructor": ["error"],
        "object-curly-spacing": ["off"],
        "@typescript-eslint/object-curly-spacing": ["error", "always"],
        "padding-line-between-statements": ["off"],
        "@typescript-eslint/padding-line-between-statements": ["error"],
        "quotes": ["off"],
        "@typescript-eslint/quotes": ["off", "single"],
        "require-await": ["off"],
        "@typescript-eslint/require-await": ["off"],
        "return-await": ["off"],
        "@typescript-eslint/return-await": ["error"],
        "semi": ["off"],
        "@typescript-eslint/semi": ["error", "always"],
        "space-before-blocks": ["off"],
        "@typescript-eslint/space-before-blocks": ["error"],
        "space-before-function-paren": ["off"],
        "@typescript-eslint/space-before-function-paren": ["off"],
        "space-infix-ops": ["off"],
        "@typescript-eslint/space-infix-ops": ["error", { "int32Hint": false }],
        "@typescript-eslint/no-non-null-assertion": ["error"],
        "promise/always-return": "error",
        "promise/no-return-wrap": "error",
        "promise/param-names": "error",
        "promise/catch-or-return": "error",
        "promise/no-native": "off",
        "promise/no-nesting": "error",
        "promise/no-promise-in-callback": "error",
        "promise/no-callback-in-promise": "error",
        "promise/avoid-new": "off",
        "promise/no-new-statics": "error",
        "promise/no-return-in-finally": "error",
        "promise/valid-params": "error",
        "no-extra-boolean-cast": "off"
      }
    }
  ]
}
